package com.ipdnaeip.wizardrynextgeneration.potion;

import com.ipdnaeip.wizardrynextgeneration.registry.WNGPotions;
import electroblob.wizardry.potion.PotionMagicEffect;
import electroblob.wizardry.util.IElementalDamage;
import electroblob.wizardry.util.MagicDamage;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.DamageSource;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.event.entity.living.LivingHurtEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

@Mod.EventBusSubscriber
public class PotionVulnerability extends PotionMagicEffect {

    public static final float DAMAGE_INCREASE = 0.15f;

    public PotionVulnerability(int liquidColor, ResourceLocation texture) {
        super(true, liquidColor, texture);
    }

    @SubscribeEvent
    public static void onLivingHurtEvent(LivingHurtEvent event) {
        EntityLivingBase entity = event.getEntityLiving();
        DamageSource damageSource = event.getSource();
        if (entity.isPotionActive(WNGPotions.VULNERABILITY_MAGIC) && damageSource.isMagicDamage()) {
            event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_MAGIC).getAmplifier() + 1)));
            if (damageSource instanceof IElementalDamage) {
                MagicDamage.DamageType damageType = ((IElementalDamage) damageSource).getType();
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_FIRE) && damageType == MagicDamage.DamageType.FIRE) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_FIRE).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_FROST) && damageType == MagicDamage.DamageType.FROST) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_FROST).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_SHOCK) && damageType == MagicDamage.DamageType.SHOCK) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_SHOCK).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_WITHER) && damageType == MagicDamage.DamageType.WITHER) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_WITHER).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_POISON) && damageType == MagicDamage.DamageType.POISON) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_POISON).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_FORCE) && damageType == MagicDamage.DamageType.FORCE) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_FORCE).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_BLAST) && damageType == MagicDamage.DamageType.BLAST) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_BLAST).getAmplifier() + 1)));
                }
                if (entity.isPotionActive(WNGPotions.VULNERABILITY_RADIANT) && damageType == MagicDamage.DamageType.RADIANT) {
                    event.setAmount(event.getAmount() * (1 + (DAMAGE_INCREASE * entity.getActivePotionEffect(WNGPotions.VULNERABILITY_RADIANT).getAmplifier() + 1)));
                }
            }
        }
    }

}
